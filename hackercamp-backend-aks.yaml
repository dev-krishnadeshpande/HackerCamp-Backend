apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
spec:
  serviceName: mongo
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-data
              mountPath: /data/db
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
  volumeClaimTemplates:
    - metadata:
        name: mongo-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
spec:
  selector:
    app: mongo
  ports:
    - port: 27017
      targetPort: 27017
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis
          ports:
            - containerPort: 6379
          volumeMounts:
            - name: redis-conf
              mountPath: /usr/local/etc/redis
          command: ["redis-server"]
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
      volumes:
        - name: redis-conf
          hostPath:
            path: /myredis/conf
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  selector:
    app: redis
  ports:
    - port: 6379
      targetPort: 6379
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: problem-admin-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: problem-admin-service
  template:
    metadata:
      labels:
        app: problem-admin-service
    spec:
      containers:
        - name: problem-admin-service
          image: hackercampbackendacr.azurecr.io/hackercamp-backend/problem-admin-service:latest
          ports:
            - containerPort: 6060
          env:
            - name: NODE_ENV
              value: "production"
            - name: PORT
              value: "6060"
            - name: DB_CONNECTION
              value: "mongodb://mongo:27017/problems"
          command: ["npm", "run", "dev"]
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
---
apiVersion: v1
kind: Service
metadata:
  name: problem-admin-service
spec:
  selector:
    app: problem-admin-service
  ports:
    - port: 6060
      targetPort: 6060
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: submission-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: submission-service
  template:
    metadata:
      labels:
        app: submission-service
    spec:
      containers:
        - name: submission-service
          image: hackercampbackendacr.azurecr.io/hackercamp-backend/submission-service:latest
          ports:
            - containerPort: 8080
          env:
            - name: NODE_ENV
              value: "production"
            - name: PORT
              value: "8080"
            - name: REDIS_HOST
              value: "redis"
            - name: REDIS_PORT
              value: "6379"
            - name: DB_CONNECTION
              value: "mongodb://mongo:27017/submissions"
            - name: PROBLEM_ADMIN_SERVICE_URL
              value: "http://problem-admin-service:6060"
            - name: SOCKET_SERVER_URL
              value: "http://socket-server:3001"
          command: ["npm", "start"]
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
---
apiVersion: v1
kind: Service
metadata:
  name: submission-service
spec:
  selector:
    app: submission-service
  ports:
    - port: 8080
      targetPort: 8080
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: evaluator-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: evaluator-service
  template:
    metadata:
      labels:
        app: evaluator-service
    spec:
      containers:
        - name: evaluator-service
          image: hackercampbackendacr.azurecr.io/hackercamp-backend/evaluator-service:latest
          ports:
            - containerPort: 4040
          env:
            - name: NODE_ENV
              value: "production"
            - name: PORT
              value: "4040"
            - name: REDIS_HOST
              value: "redis"
            - name: REDIS_PORT
              value: "6379"
          securityContext:
            privileged: true
          volumeMounts:
            - name: docker-sock
              mountPath: /var/run/docker.sock
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
      volumes:
        - name: docker-sock
          hostPath:
            path: /var/run/docker.sock
---
apiVersion: v1
kind: Service
metadata:
  name: evaluator-service
spec:
  selector:
    app: evaluator-service
  ports:
    - port: 4040
      targetPort: 4040
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: socket-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: socket-server
  template:
    metadata:
      labels:
        app: socket-server
    spec:
      containers:
        - name: socket-server
          image: hackercampbackendacr.azurecr.io/hackercamp-backend/socket-server:1.1
          ports:
            - containerPort: 3001
          env:
            - name: NODE_ENV
              value: "production"
            - name: PORT
              value: "3001"
            - name: REDIS_HOST
              value: "redis"
            - name: REDIS_PORT
              value: "6379"
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
---
apiVersion: v1
kind: Service
metadata:
  name: socket-server
spec:
  selector:
    app: socket-server
  ports:
    - protocol: TCP
      port: 3001
      targetPort: 3001
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sample-frontend
  template:
    metadata:
      labels:
        app: sample-frontend
    spec:
      containers:
        - name: sample-frontend
          image: hackercampbackendacr.azurecr.io/hackercamp-backend/sample-frontend:1.2
          ports:
            - containerPort: 80
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
---
apiVersion: v1
kind: Service
metadata:
  name: sample-frontend
spec:
  selector:
    app: sample-frontend
  ports:
    - port: 80
      targetPort: 80
  type: NodePort
